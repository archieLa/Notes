@startuml

abstract class AbstractFactory {
   AbstractProductA* CreateProductA()
   AbstractProductB* CreateProductB()
}

class ConcreteFactory1 {
   AbstractProductA* CreateProductA()
   AbstractProductB* CreateProductB()
}

class ConcreteFactory2 {
   AbstractProductA* CreateProductA()
   AbstractProductB* CreateProductB()
}

abstract class AbstractProductA {}
class ProductA1 {}
class ProductA2 {}

abstract class AbstractProductB {}
class ProductB1 {}
class ProductB2 {}


Client ..> AbstractFactory : use
AbstractFactory <|.. ConcreteFactory1
AbstractFactory <|.. ConcreteFactory2

Client ..> AbstractProductA : use
AbstractProductA <|.. ProductA1
AbstractProductA <|.. ProductA2


Client ..> AbstractProductB : use
AbstractProductB <|.. ProductB1
AbstractProductB <|.. ProductB2

ProductA1 <.. ConcreteFactory1
ProductB1 <.. ConcreteFactory1

ProductA2 <.. ConcreteFactory2 
ProductB2 <.. ConcreteFactory2


@enduml